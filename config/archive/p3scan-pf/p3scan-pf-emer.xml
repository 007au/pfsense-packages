<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE packagegui SYSTEM "../schema/packages.dtd">
<?xml-stylesheet type="text/xsl" href="../xsl/package.xsl"?>
<packagegui>
        <copyright>
        <![CDATA[
/* $Id$ */
/* ========================================================================== */
/*
    authng.xml
    part of pfSense (http://www.pfSense.com)
    Copyright (C) 2007 Daniel S. Haischt <me@daniel.stefan.haischt.name>
    All rights reserved.

    Based on m0n0wall (http://m0n0.ch/wall)
    Copyright (C) 2003-2006 Manuel Kasper <mk@neon1.net>.
    All rights reserved.
                                                                              */
/* ========================================================================== */
/*
    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions are met:

     1. Redistributions of source code must retain the above copyright notice,
        this list of conditions and the following disclaimer.

     2. Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the distribution.

    THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
    INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
    AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
    POSSIBILITY OF SUCH DAMAGE.
                                                                              */
/* ========================================================================== */
        ]]>
        </copyright>
  <description>Describe your package here</description>
  <requirements>Describe your package requirements here</requirements>
  <faq>Currently there are no FAQ items provided.</faq>
  <!-- change this if configpath works -->
  <name>p3scanpfemer</name>
  <version>1.0</version>
  <title>Services: POP3 Proxy: Emergency Contact</title>
  <include_file>p3scan-pf.inc</include_file>
  <tabs>
    <tab>
      <text>Daemon Settings</text>
      <url>/pkg_edit.php?xml=p3scan-pf.xml&amp;id=0</url>
    </tab>
    <tab>
      <text>Transparent Proxy Exclusion</text>
      <url>/pkg.php?xml=p3scan-pf-transex.xml</url>
    </tab>
    <tab>
      <text>Message Processing</text>
      <url>/pkg_edit.php?xml=p3scan-pf-msg.xml&amp;id=0</url>
    </tab>
    <tab>
      <text>Emergency Contact</text>
      <url>/pkg.php?xml=p3scan-pf-emer.xml</url>
      <active />
    </tab>
    <tab>
      <text>Virus Scanner Settings</text>
      <url>/pkg_edit.php?xml=p3scan-pf-vir.xml&amp;id=0</url>
    </tab>
    <tab>
      <text>SPAM Settings</text>
      <url>/pkg_edit.php?xml=p3scan-pf-spam.xml&amp;id=0</url>
    </tab>
  </tabs>
  <!-- 
    configpath gets expanded out automatically and config items
    will be stored in that location
  -->
  <configpath>['installedpackages']['p3scanpf']['config']['contacts']</configpath>
  <!--
    adddeleteeditpagefields items will appear on the first page where you can 
    add / delete or edit items.  An example of this would be the nat page where 
    you add new nat redirects 
  -->
  <adddeleteeditpagefields>
    <columnitem>
      <fielddescr>Email Address</fielddescr>
      <fieldname>emailaddress</fieldname>
    </columnitem>
    <columnitem>
      <fielddescr>Description</fielddescr>
      <fieldname>description</fieldname>
    </columnitem>
  </adddeleteeditpagefields>
  <!--
    fields gets invoked when the user adds or edits a item. The following items
    will be parsed and rendered for the user as a gui with input, and selectboxes.
  -->
  <fields>
    <field>
      <fielddescr>Email Address</fielddescr>
      <fieldname>emailaddress</fieldname>
      <description>
        In the event p3scan encounters a catastrophic problem and has to terminate,
        it will send an email to these email addresses just before setting up to
        close down on the next iteration of a child process.
      </description>
      <type>input</type>
    </field>
    <field>
      <fielddescr>Description</fielddescr>
      <fieldname>description</fieldname>
      <description>Description.</description>
      <type>input</type>
    </field>
  </fields>
  <!--
    Arbitrary PHP Code, that gets executed if a certain event gets triggered.
  -->
  <custom_delete_php_command>
    sync_package_p3scan();
  </custom_delete_php_command>
  <custom_php_resync_config_command> 
    sync_package_p3scan();
  </custom_php_resync_config_command>
</packagegui>
